name: ⚙️🚀

on:
  push:
    tags: ["*"]

jobs:
  build-artifacts:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact-name: eww-hyprbar-linux-x86_64
            cargo-target: x86_64-unknown-linux-gnu

    name: ⚙️ Build (${{ matrix.artifact-name }})
    runs-on: ${{ matrix.os }}
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v3.3.0

      - name: 🎯 Add Rustup Target
        run: rustup target add ${{ matrix.cargo-target }}

      - name: ♻️ Manage Build Cache
        uses: actions/cache@v3.2.6
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: cargo-${{ matrix.artifact-name }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ matrix.artifact-name }}-${{ hashFiles('**/Cargo.lock') }}
            cargo-

      - name: 🛠️ Build Binary
        run: cargo build --verbose --locked --release --target ${{ matrix.cargo-target }}

      - name: 📁 Setup Archive + Extension
        shell: bash
        run: |
          mkdir -p staging
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp "target/${{ matrix.cargo-target }}/release/eww-hyprbar.exe" staging/
            cd staging
            7z a ../${{ matrix.artifact-name }}.zip *
          else
            cp "target/${{ matrix.cargo-target }}/release/eww-hyprbar" staging/
            cd staging
            zip ../${{ matrix.artifact-name }}.zip *
          fi

      - name: ⬆️ Upload Binary Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.artifact-name }}.zip
          retention-days: 5

  create-release:
    needs: ["build-artifacts"]
    name: 🚀 Create Release
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Download All Binary Artifacts
        uses: actions/download-artifact@v3.0.2

      - name: 🗃️Create Draft Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          generate_release_notes: true
          files: eww-hyprbar-*/*.zip
